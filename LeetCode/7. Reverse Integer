# Technical Used: only python need math.fmod and int function, the other language should work in normal

# Given a signed 32-bit integer x, return x with its digits reversed. 
# If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
# Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

# Example 1:
# Input: x = 123
# Output: 321

# Example 2:
# Input: x = -123
# Output: -321

# Example 3:
# Input: x = 120
# Output: 21

import math
class Solution:
    def reverse(self, x: int) -> int:
        rev = 0
        while x != 0:
            pop = int(math.fmod(x,10))
            x = int(x/10)
            if rev > 214748364 or (rev == 214748364 and pop > 7):
                return 0
            if rev < -214748364 or (rev == -214748364 and pop < -8):
                return 0
            rev = rev *10 + pop
        return rev
